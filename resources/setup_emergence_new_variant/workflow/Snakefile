import pandas as pd

dir_path="/cluster/work/bewi/members/lfuhrmann/SARS-CoV-2-wastewater-sample-processing-VILOCA/resources/setup_emergence_new_variant/"
fname_samples = dir_path+"resources/samples.csv"
fname_reference = "resources/NC_045512.2.fasta"
fname_insert_bed = "resources/SARS-CoV-2.insert.bed"

all_samples = [f"{row[1]}/{row[2]}" for row in pd.read_csv(fname_samples, comment="#").itertuples()]


module wastewater_processing:
    snakefile:
        "../../../workflow/Snakefile"

use rule copy_coverage_file from wastewater_processing as ww_copy_coverage_file
use rule unzip_coverage_file from wastewater_processing as ww_unzip_coverage_file
use rule check_coverage from wastewater_processing as ww_check_coverage
use rule provide_alignment from wastewater_processing as ww_provide_alignment
use rule split from wastewater_processing as ww_split
use rule flash from wastewater_processing as ww_flash
use rule alignment_merged from wastewater_processing as ww_alignment_merged


rule all:
    input:
        [ f"results/{sample}/variant_calling/snv/cooccurring_mutations.csv"
            for sample in all_samples
        ],
    default_target: True

# other output
use rule run_viloca from wastewater_processing as wastewater_processing_run_viloca with:
    input:
        fname_bam=rules.ww_alignment_merged.output.fname_bam,
        fname_reference=fname_reference,
        fname_insert_bed=fname_insert_bed,
        fname_bad_samples= rules.ww_check_coverage.output.fname_bad_cov_samples,
    output:
        fname_vcf=f"results/{{sample}}/snvs.vcf",
        fname_csv=f"results/{{sample}}/variant_calling/snv/cooccurring_mutations.csv",
        dname_work=directory(
            f"results/{{sample}}/variant_calling/"
        ),
    params:
        sample= lambda wc: wc.get("sample")
    resources:
        mem_mb=100000,
        runtime=5760,
        threads=20,
